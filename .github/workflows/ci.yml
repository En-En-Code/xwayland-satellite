name: CI

on:
  push:
    branches: [ "main", "ci-revamp-test" ]
  pull_request:
    branches: [ "main", "ci-revamp-test" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  UBUNTU_DOCKERFILE: .github/workflows/ubuntu.dockerfile

permissions:
  contents: read
  packages: read

jobs:
  pre-build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: read
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: Cargo.toml
      - id: msrv
        run: |
          {
            echo 'msrv<<EOF'
            awk '/^rust-version = "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"$/ \
            { print substr($NF, 2, length($NF) - 2) }' Cargo.toml
            echo EOF
          } >> "$GITHUB_OUTPUT"
      - id: name
        run: echo "container_path=${{ env.REGISTRY }}/${GITHUB_REPOSITORY@L}" >> "$GITHUB_OUTPUT"
    outputs:
      msrv: ${{ steps.msrv.outputs.msrv }}
      container-path: ${{ steps.name.outputs.container_path }}

  build:
    runs-on: ubuntu-latest
    needs: pre-build
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - id: timestamp
        run: echo "TIMESTAMP=$(git log -1 --pretty=%ct)" >> $GITHUB_ENV
      - uses: docker/build-push-action@v6
        id: docker-build-push-action
        with:
          file: ${{ env.UBUNTU_DOCKERFILE }}
          pull: true
          push: ${{ github.event_name == 'push' }}
          tags: ${{ needs.pre-build.outputs.container-path }}-ubuntu:latest
          labels: org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: |
            type=gha
            type=registry,ref=${{ needs.pre-build.outputs.container-path }}-ubuntu:latest
          cache-to: |
            type=gha,mode=max
        env:
          SOURCE_DATE_EPOCH: ${{ env.TIMESTAMP }}
      - name: Start container
        run: docker run --name xwls-test --detach --interactive --tty
          ${{ steps.docker-build-push-action.outputs.imageid }}
      - name: Check workspace
        run: docker exec --interactive --tty xwls-test
          sh -c "cargo check --profile ci --locked --verbose --keep-going --workspace --exclude xwayland-satellite"
      - name: Build
        run: docker exec --interactive --tty xwls-test
          sh -c "cargo test --no-run --profile ci --locked --verbose"
      - name: Run tests
        run: docker exec --interactive --tty xwls-test
          sh -c "cargo test --profile ci --locked --verbose --no-fail-fast -- --test-threads 1"
      - name: Format check
        run: docker exec --interactive --tty xwls-test
          sh -c "cargo fmt --check"
      - name: Clippy
        run: docker exec --interactive --tty xwls-test
          sh -c "cargo clippy --profile ci --locked --workspace --all-targets"
