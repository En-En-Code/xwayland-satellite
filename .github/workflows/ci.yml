name: CI

on:
  push:
    branches: [ "main", "ci-revamp-test" ]
  pull_request:
    branches: [ "main", "ci-revamp-test" ]

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  UBUNTU_DOCKERFILE: .github/workflows/ubuntu.dockerfile

permissions:
  contents: read
  packages: read

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: Cargo.toml
      - name: Get commit timestamp
        run: echo "SOURCE_DATE_EPOCH=$(git log -1 --pretty=%ct)" >> "$GITHUB_ENV"
      - name: Get MSRV
        run: echo "MSRV=$(
          awk '/^rust-version = "[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+"$/ {
            print substr($NF, 2, length($NF) - 2)
          }' Cargo.toml)" >> "$GITHUB_ENV"
      - id: image-name
        run: |
          echo "name=${{ env.REGISTRY }}/${GITHUB_REPOSITORY@L}-ubuntu" >> "$GITHUB_OUTPUT"
      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v3
      - uses: docker/build-push-action@v6
        id: docker-build-push-registry
        with:
          file: ${{ env.UBUNTU_DOCKERFILE }}
          tags: ${{ steps.image-name.outputs.name }}:latest
          labels: org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
          cache-from: type=registry,ref=${{ steps.image-name.outputs.name }}:cache
          cache-to: |
            ${{ github.event_name == 'push' &&
            format('type=registry,ref={0}:cache,mode=max', steps.image-name.outputs.name) ||
            '' }}
          outputs: |
            type=image,ref=${{ steps.image-name.outputs.name }}:latest,push=${{ github.event_name == 'push' }}
      - name: ctr images list
        run: ctr images list
      - name: Start container
        run: docker run --name xwls-test --detach --interactive --tty
          ${{ steps.image-name.outputs.name }}:latest
      - name: Check workspace
        run: docker exec --interactive xwls-test
          sh -c "cargo check --profile ci --locked --verbose --keep-going --workspace --exclude xwayland-satellite"
      - name: Build
        run: docker exec --interactive xwls-test
          sh -c "cargo test --no-run --profile ci --locked --verbose"
      - name: Run tests
        run: docker exec --interactive xwls-test
          sh -c "cargo test --profile ci --locked --verbose --no-fail-fast -- --test-threads 1"
      - name: Format check
        run: docker exec --interactive xwls-test
          sh -c "cargo fmt --check"
      - name: Clippy
        run: docker exec --interactive xwls-test
          sh -c "cargo clippy --profile ci --locked --workspace --all-targets"
